@page "/employeeedit/{employeeId}"
@page "/employeeedit"
@using Covid.Shared.Dtos
<h3>Employee Edit</h3>

<EditForm Model="@Employee">
    <DataAnnotationsValidator />
    <ValidationSummary/>

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">员工号</label>
        <div class="col-sm-10 ">
            <InputText class="form-control" id="no" @bind-Value="Employee.No"/>
        </div>
    </div>

    <div class="form-group row">
         <label class="col-sm-2 col-form-label">姓名</label>
        <div class="col-sm-10 ">
            <InputText class="form-control"id="name" @bind-Value="Employee.Name"/>
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">出生日期</label>
        <div class="col-sm-10 ">
            <InputDate for="birthDate" id="birthDate" class="form-control" @bind-Value="Employee.BirthDate" />
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">性别</label>
        <div class="col-sm-10 ">
            <InputSelect id="gender" class="form-control" @bind-Value="Employee.Gender">
                @foreach (var value in Enum.GetValues(typeof(Gender)))
                {
                    <option value="@value">@value</option>
                }
            </InputSelect>
        </div>
    </div>
       
</EditForm>

@code {
    [Parameter]
    public string employeeId { get; set; }
    [Inject]
    public HttpClient HttpClient { get; set; }
    public EmployeeDto Employee { get; set; }=new EmployeeDto();


    protected override async Task OnInitializedAsync()
    {
        Employee =await HttpClient.GetFromJsonAsync<EmployeeDto>($"api/department/1/employee/{employeeId}");
        
        await base.OnInitializedAsync();
    }

}
